use strict;
use warnings;
use Path::Tiny;
use JSON::PS;
use Web::Encoding;
BEGIN { require 'chars.pl' };

my $ThisPath = path (__FILE__)->parent;
my $RootPath = $ThisPath->parent->parent;
my $TempPath = $RootPath->child ('local/iwm');
my $Data = {};

{
  for (0x3400..0x4DB5, 0x4E00..0x9FA5) {
    my $c1 = u_chr $_;
    my $c2 = sprintf ':u-gbdot16-%x', $_;
    $Data->{glyphs}->{$c2}->{$c1}->{'manakai:implements:gb18030'} = 1;
  }
}

## <https://wiki.suikawiki.org/n/%E6%BF%81%E7%82%B9%E3%81%A8%E5%8D%8A%E6%BF%81%E7%82%B9%E3%81%AE%E6%96%87%E5%AD%97>
for (0xE000..0xE013, 0xE026..0xE02F, 0xE03C, 0xE03E..0xE0DD, 0xE0E2..0xE0E3) {
  my $c1 = u_chr $_;
  my $c2 = sprintf ':u-dakuten-%x', $_;
  $Data->{codes}->{$c1}->{$c2}->{'manakai:private'} = 1;
}

## <https://wiki.suikawiki.org/n/%E5%AD%97%E8%BA%B0%E5%B8%B3%E5%A4%89%E4%BD%93%E4%BB%AE%E5%90%8D>
for (0xF000..0xF035) {
  my $c1 = u_chr $_;
  my $c2 = sprintf ':u-jitaichou-%x', $_;
  $Data->{codes}->{$c1}->{$c2}->{'manakai:private'} = 1;
}
for (0x3031, 0x3033, 0x3035, 0x303B, 0x3042, 0x3044, 0x3046, 0x3048, 0x304A,
     0x304B, 0x304D, 0x304F, 0x3051, 0x3053, 0x3055, 0x3057, 0x3059, 0x305B,
     0x305D, 0x305F, 0x3061, 0x3064, 0x3066, 0x3068, 0x306A..0x306F,
     0x3072, 0x3075, 0x3078, 0x307B, 0x307E..0x3082, 0x3084, 0x3086, 0x3088,
     0x3089, 0x308A, 0x308B, 0x308C, 0x308D, 0x308F, 0x3090, 0x3091, 0x3092,
     0x3093, 0x309D, 0x309F, 0x30A2, 0x30A4, 0x30A6, 0x30A8, 0x30AA, 0x30AB,
     0x30AD, 0x30AF, 0x30B1, 0x30B3, 0x30B5, 0x30B7, 0x30B9, 0x30BB, 0x30BD,
     0x30BF, 0x30C1, 0x30C4, 0x30C6, 0x30C8, 0x30CA, 0x30CB, 0x30CC, 0x30CD,
     0x30CE, 0x30CF, 0x30D2, 0x30D5, 0x30D8, 0x30DB, 0x30DE, 0x30DF, 0x30E0,
     0x30E1, 0x30E2, 0x30E4, 0x30E6, 0x30E8, 0x30E9, 0x30EA, 0x30EB, 0x30EC,
     0x30ED, 0x30EF, 0x30F0, 0x30F1, 0x30F2, 0x30F3, 0x30FC, 0x30FD, 0x30FF,
     0x1B001, 0x1B002, 0x1B004, 0x1B006, 0x1B00B, 0x1B015, 0x1B019, 0x1B01A,
     0x1B02A, 0x1B02C, 0x1B030, 0x1B033, 0x1B034, 0x1B038, 0x1B03A, 0x1B03E,
     0x1B045, 0x1B048, 0x1B04F, 0x1B051, 0x1B052, 0x1B055, 0x1B058, 0x1B05A,
     0x1B05B, 0x1B05F, 0x1B060, 0x1B066, 0x1B069, 0x1B06B, 0x1B072, 0x1B073,
     0x1B07B, 0x1B081, 0x1B08B, 0x1B08C, 0x1B090, 0x1B091, 0x1B097, 0x1B099,
     0x1B09B, 0x1B09C, 0x1B09E, 0x1B0A6, 0x1B0A9, 0x1B0AB, 0x1B0AE, 0x1B0AF,
     0x1B0B1, 0x1B0B6, 0x1B0BB, 0x1B0C2, 0x1B0C3, 0x1B0C4, 0x1B0C5, 0x1B0C9,
     0x1B0CE, 0x1B0D1, 0x1B0D4, 0x1B0D9, 0x1B0DA, 0x1B0DD, 0x1B0DF, 0x1B0E4,
     0x1B0E5, 0x1B0EB, 0x1B0F0, 0x1B0F6, 0x1B0F8, 0x1B0FA, 0x1B0FF, 0x1B100,
     0x1B106, 0x1B10A, 0x1B10B, 0x1B11A, 0x1B11C, 0x2A708, 0x2CEFF, 0x2CF00,
     0x2CF02) {
  my $c1 = u_chr $_;
  my $c2 = sprintf ':u-jitaichou-%x', $_;
  $Data->{glyphs}->{$c2}->{$c1}->{'manakai:implements'} = 1;
}

print_rel_data $Data;

## License: Public Domain.
